/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jooq.JSONB;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Links implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String link;
    private LocalDateTime schedulerUpdatedDate;
    private LocalDateTime userCheckDate;
    private Long domainId;
    private JSONB dataChanges;
    private LocalDateTime pageUpdatedDate;

    public Links() {}

    public Links(Links value) {
        this.id = value.id;
        this.link = value.link;
        this.schedulerUpdatedDate = value.schedulerUpdatedDate;
        this.userCheckDate = value.userCheckDate;
        this.domainId = value.domainId;
        this.dataChanges = value.dataChanges;
        this.pageUpdatedDate = value.pageUpdatedDate;
    }

    @ConstructorProperties({ "id", "link", "schedulerUpdatedDate", "userCheckDate", "domainId", "dataChanges", "pageUpdatedDate" })
    public Links(
        @NotNull Long id,
        @NotNull String link,
        @NotNull LocalDateTime schedulerUpdatedDate,
        @NotNull LocalDateTime userCheckDate,
        @NotNull Long domainId,
        @NotNull JSONB dataChanges,
        @NotNull LocalDateTime pageUpdatedDate
    ) {
        this.id = id;
        this.link = link;
        this.schedulerUpdatedDate = schedulerUpdatedDate;
        this.userCheckDate = userCheckDate;
        this.domainId = domainId;
        this.dataChanges = dataChanges;
        this.pageUpdatedDate = pageUpdatedDate;
    }

    /**
     * Getter for <code>public.links.id</code>.
     */
    @NotNull
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.links.id</code>.
     */
    public void setId(@NotNull Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.links.link</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getLink() {
        return this.link;
    }

    /**
     * Setter for <code>public.links.link</code>.
     */
    public void setLink(@NotNull String link) {
        this.link = link;
    }

    /**
     * Getter for <code>public.links.scheduler_updated_date</code>.
     */
    @NotNull
    public LocalDateTime getSchedulerUpdatedDate() {
        return this.schedulerUpdatedDate;
    }

    /**
     * Setter for <code>public.links.scheduler_updated_date</code>.
     */
    public void setSchedulerUpdatedDate(@NotNull LocalDateTime schedulerUpdatedDate) {
        this.schedulerUpdatedDate = schedulerUpdatedDate;
    }

    /**
     * Getter for <code>public.links.user_check_date</code>.
     */
    @NotNull
    public LocalDateTime getUserCheckDate() {
        return this.userCheckDate;
    }

    /**
     * Setter for <code>public.links.user_check_date</code>.
     */
    public void setUserCheckDate(@NotNull LocalDateTime userCheckDate) {
        this.userCheckDate = userCheckDate;
    }

    /**
     * Getter for <code>public.links.domain_id</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getDomainId() {
        return this.domainId;
    }

    /**
     * Setter for <code>public.links.domain_id</code>.
     */
    public void setDomainId(@NotNull Long domainId) {
        this.domainId = domainId;
    }

    /**
     * Getter for <code>public.links.data_changes</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public JSONB getDataChanges() {
        return this.dataChanges;
    }

    /**
     * Setter for <code>public.links.data_changes</code>.
     */
    public void setDataChanges(@NotNull JSONB dataChanges) {
        this.dataChanges = dataChanges;
    }

    /**
     * Getter for <code>public.links.page_updated_date</code>.
     */
    @NotNull
    public LocalDateTime getPageUpdatedDate() {
        return this.pageUpdatedDate;
    }

    /**
     * Setter for <code>public.links.page_updated_date</code>.
     */
    public void setPageUpdatedDate(@NotNull LocalDateTime pageUpdatedDate) {
        this.pageUpdatedDate = pageUpdatedDate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Links other = (Links) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.link == null) {
            if (other.link != null)
                return false;
        }
        else if (!this.link.equals(other.link))
            return false;
        if (this.schedulerUpdatedDate == null) {
            if (other.schedulerUpdatedDate != null)
                return false;
        }
        else if (!this.schedulerUpdatedDate.equals(other.schedulerUpdatedDate))
            return false;
        if (this.userCheckDate == null) {
            if (other.userCheckDate != null)
                return false;
        }
        else if (!this.userCheckDate.equals(other.userCheckDate))
            return false;
        if (this.domainId == null) {
            if (other.domainId != null)
                return false;
        }
        else if (!this.domainId.equals(other.domainId))
            return false;
        if (this.dataChanges == null) {
            if (other.dataChanges != null)
                return false;
        }
        else if (!this.dataChanges.equals(other.dataChanges))
            return false;
        if (this.pageUpdatedDate == null) {
            if (other.pageUpdatedDate != null)
                return false;
        }
        else if (!this.pageUpdatedDate.equals(other.pageUpdatedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.link == null) ? 0 : this.link.hashCode());
        result = prime * result + ((this.schedulerUpdatedDate == null) ? 0 : this.schedulerUpdatedDate.hashCode());
        result = prime * result + ((this.userCheckDate == null) ? 0 : this.userCheckDate.hashCode());
        result = prime * result + ((this.domainId == null) ? 0 : this.domainId.hashCode());
        result = prime * result + ((this.dataChanges == null) ? 0 : this.dataChanges.hashCode());
        result = prime * result + ((this.pageUpdatedDate == null) ? 0 : this.pageUpdatedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Links (");

        sb.append(id);
        sb.append(", ").append(link);
        sb.append(", ").append(schedulerUpdatedDate);
        sb.append(", ").append(userCheckDate);
        sb.append(", ").append(domainId);
        sb.append(", ").append(dataChanges);
        sb.append(", ").append(pageUpdatedDate);

        sb.append(")");
        return sb.toString();
    }
}
