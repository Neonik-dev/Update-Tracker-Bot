/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.records;


import java.beans.ConstructorProperties;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.Links;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LinksRecord extends UpdatableRecordImpl<LinksRecord> implements Record7<Long, String, LocalDateTime, LocalDateTime, Long, JSONB, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.links.id</code>.
     */
    public void setId(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.links.id</code>.
     */
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.links.link</code>.
     */
    public void setLink(@NotNull String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.links.link</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getLink() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.links.scheduler_updated_date</code>.
     */
    public void setSchedulerUpdatedDate(@NotNull LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.links.scheduler_updated_date</code>.
     */
    @NotNull
    public LocalDateTime getSchedulerUpdatedDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.links.user_check_date</code>.
     */
    public void setUserCheckDate(@NotNull LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.links.user_check_date</code>.
     */
    @NotNull
    public LocalDateTime getUserCheckDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.links.domain_id</code>.
     */
    public void setDomainId(@NotNull Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.links.domain_id</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getDomainId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.links.data_changes</code>.
     */
    public void setDataChanges(@NotNull JSONB value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.links.data_changes</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public JSONB getDataChanges() {
        return (JSONB) get(5);
    }

    /**
     * Setter for <code>public.links.page_updated_date</code>.
     */
    public void setPageUpdatedDate(@NotNull LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.links.page_updated_date</code>.
     */
    @NotNull
    public LocalDateTime getPageUpdatedDate() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row7<Long, String, LocalDateTime, LocalDateTime, Long, JSONB, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row7<Long, String, LocalDateTime, LocalDateTime, Long, JSONB, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return Links.LINKS.ID;
    }

    @Override
    @NotNull
    public Field<String> field2() {
        return Links.LINKS.LINK;
    }

    @Override
    @NotNull
    public Field<LocalDateTime> field3() {
        return Links.LINKS.SCHEDULER_UPDATED_DATE;
    }

    @Override
    @NotNull
    public Field<LocalDateTime> field4() {
        return Links.LINKS.USER_CHECK_DATE;
    }

    @Override
    @NotNull
    public Field<Long> field5() {
        return Links.LINKS.DOMAIN_ID;
    }

    @Override
    @NotNull
    public Field<JSONB> field6() {
        return Links.LINKS.DATA_CHANGES;
    }

    @Override
    @NotNull
    public Field<LocalDateTime> field7() {
        return Links.LINKS.PAGE_UPDATED_DATE;
    }

    @Override
    @NotNull
    public Long component1() {
        return getId();
    }

    @Override
    @NotNull
    public String component2() {
        return getLink();
    }

    @Override
    @NotNull
    public LocalDateTime component3() {
        return getSchedulerUpdatedDate();
    }

    @Override
    @NotNull
    public LocalDateTime component4() {
        return getUserCheckDate();
    }

    @Override
    @NotNull
    public Long component5() {
        return getDomainId();
    }

    @Override
    @NotNull
    public JSONB component6() {
        return getDataChanges();
    }

    @Override
    @NotNull
    public LocalDateTime component7() {
        return getPageUpdatedDate();
    }

    @Override
    @NotNull
    public Long value1() {
        return getId();
    }

    @Override
    @NotNull
    public String value2() {
        return getLink();
    }

    @Override
    @NotNull
    public LocalDateTime value3() {
        return getSchedulerUpdatedDate();
    }

    @Override
    @NotNull
    public LocalDateTime value4() {
        return getUserCheckDate();
    }

    @Override
    @NotNull
    public Long value5() {
        return getDomainId();
    }

    @Override
    @NotNull
    public JSONB value6() {
        return getDataChanges();
    }

    @Override
    @NotNull
    public LocalDateTime value7() {
        return getPageUpdatedDate();
    }

    @Override
    @NotNull
    public LinksRecord value1(@NotNull Long value) {
        setId(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord value2(@NotNull String value) {
        setLink(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord value3(@NotNull LocalDateTime value) {
        setSchedulerUpdatedDate(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord value4(@NotNull LocalDateTime value) {
        setUserCheckDate(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord value5(@NotNull Long value) {
        setDomainId(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord value6(@NotNull JSONB value) {
        setDataChanges(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord value7(@NotNull LocalDateTime value) {
        setPageUpdatedDate(value);
        return this;
    }

    @Override
    @NotNull
    public LinksRecord values(@NotNull Long value1, @NotNull String value2, @NotNull LocalDateTime value3, @NotNull LocalDateTime value4, @NotNull Long value5, @NotNull JSONB value6, @NotNull LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinksRecord
     */
    public LinksRecord() {
        super(Links.LINKS);
    }

    /**
     * Create a detached, initialised LinksRecord
     */
    @ConstructorProperties({ "id", "link", "schedulerUpdatedDate", "userCheckDate", "domainId", "dataChanges", "pageUpdatedDate" })
    public LinksRecord(@NotNull Long id, @NotNull String link, @NotNull LocalDateTime schedulerUpdatedDate, @NotNull LocalDateTime userCheckDate, @NotNull Long domainId, @NotNull JSONB dataChanges, @NotNull LocalDateTime pageUpdatedDate) {
        super(Links.LINKS);

        setId(id);
        setLink(link);
        setSchedulerUpdatedDate(schedulerUpdatedDate);
        setUserCheckDate(userCheckDate);
        setDomainId(domainId);
        setDataChanges(dataChanges);
        setPageUpdatedDate(pageUpdatedDate);
    }

    /**
     * Create a detached, initialised LinksRecord
     */
    public LinksRecord(ru.tinkoff.edu.java.scrapper.domain.jooq.tables.pojos.Links value) {
        super(Links.LINKS);

        if (value != null) {
            setId(value.getId());
            setLink(value.getLink());
            setSchedulerUpdatedDate(value.getSchedulerUpdatedDate());
            setUserCheckDate(value.getUserCheckDate());
            setDomainId(value.getDomainId());
            setDataChanges(value.getDataChanges());
            setPageUpdatedDate(value.getPageUpdatedDate());
        }
    }
}
